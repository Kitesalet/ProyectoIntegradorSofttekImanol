// <auto-generated />
using System;
using IntegradorSofttekImanol.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntegradorSofttekImanol.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.Project", b =>
                {
                    b.Property<int>("CodProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codProyecto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodProject"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("direccion");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaAlta");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaBaja");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaUpdate");

                    b.HasKey("CodProject");

                    b.ToTable("proyectos", (string)null);

                    b.HasData(
                        new
                        {
                            CodProject = 1,
                            Address = "xxxxxxxx",
                            CreatedDate = new DateTime(2023, 9, 20, 17, 6, 1, 92, DateTimeKind.Local).AddTicks(8763),
                            Name = "random",
                            State = 2
                        },
                        new
                        {
                            CodProject = 2,
                            Address = "xxxxxxxx",
                            CreatedDate = new DateTime(2023, 9, 20, 17, 6, 1, 92, DateTimeKind.Local).AddTicks(8781),
                            Name = "random",
                            State = 1
                        });
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.Role", b =>
                {
                    b.Property<int>("CodRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodRole"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaAlta");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaBaja");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nombre");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaUpdate");

                    b.HasKey("CodRole");

                    b.ToTable("roles", (string)null);

                    b.HasData(
                        new
                        {
                            CodRole = 1,
                            CreatedDate = new DateTime(2023, 9, 20, 17, 6, 1, 96, DateTimeKind.Local).AddTicks(693),
                            Description = "Usuario con derechos maximos",
                            Name = "Administrador"
                        },
                        new
                        {
                            CodRole = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Usuario con derechos basicos",
                            Name = "Consultor"
                        });
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.Service", b =>
                {
                    b.Property<int>("CodService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodService"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaAlta");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaBaja");

                    b.Property<string>("Descr")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descr");

                    b.Property<decimal>("HourValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valorHora");

                    b.Property<bool>("State")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaUpdate");

                    b.HasKey("CodService");

                    b.ToTable("servicios", (string)null);

                    b.HasData(
                        new
                        {
                            CodService = 1,
                            CreatedDate = new DateTime(2023, 9, 20, 17, 6, 1, 92, DateTimeKind.Local).AddTicks(9107),
                            Descr = "xxxxxxxx",
                            HourValue = 100m,
                            State = true
                        });
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.User", b =>
                {
                    b.Property<int>("CodUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodUser"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaAlta");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaBaja");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("contrasena");

                    b.Property<int?>("RoleCodRole")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaUpdate");

                    b.HasKey("CodUser");

                    b.HasIndex("RoleCodRole");

                    b.ToTable("usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            CodUser = 1,
                            CreatedDate = new DateTime(2023, 9, 20, 17, 6, 1, 93, DateTimeKind.Local).AddTicks(30),
                            Dni = 39321874,
                            Name = "random",
                            Password = "2a80d4f36544c4bd8352ce27aa61c79a7dd4f7edde6cccebe94b38decbc5af5e",
                            Type = 2
                        },
                        new
                        {
                            CodUser = 2,
                            CreatedDate = new DateTime(2023, 9, 20, 17, 6, 1, 93, DateTimeKind.Local).AddTicks(230),
                            Dni = 39382743,
                            Name = "random",
                            Password = "2a80d4f36544c4bd8352ce27aa61c79a7dd4f7edde6cccebe94b38decbc5af5e",
                            Type = 1
                        },
                        new
                        {
                            CodUser = 3,
                            CreatedDate = new DateTime(2023, 9, 20, 17, 6, 1, 93, DateTimeKind.Local).AddTicks(309),
                            Dni = 39382743,
                            Name = "random",
                            Password = "67a90cb7fd5662ad510e6861727eb97f218b440e43e7820183fabf19d7f537dc",
                            Type = 1
                        });
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.Work", b =>
                {
                    b.Property<int>("CodWork")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codTrabajo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodWork"), 1L, 1);

                    b.Property<int>("CodProject")
                        .HasColumnType("int")
                        .HasColumnName("codProyecto");

                    b.Property<int>("CodService")
                        .HasColumnType("int")
                        .HasColumnName("codServicio");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("costo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaAlta");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaBaja");

                    b.Property<int>("HourQty")
                        .HasColumnType("int")
                        .HasColumnName("cantHoras");

                    b.Property<decimal>("HourValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valorHora");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaUpdate");

                    b.HasKey("CodWork");

                    b.HasIndex("CodProject");

                    b.HasIndex("CodService");

                    b.ToTable("trabajos", (string)null);

                    b.HasData(
                        new
                        {
                            CodWork = 1,
                            CodProject = 1,
                            CodService = 1,
                            Cost = 8m,
                            CreatedDate = new DateTime(2023, 9, 20, 17, 6, 1, 92, DateTimeKind.Local).AddTicks(9248),
                            Date = new DateTime(2023, 9, 20, 17, 6, 1, 92, DateTimeKind.Local).AddTicks(9246),
                            HourQty = 2,
                            HourValue = 4m
                        });
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.User", b =>
                {
                    b.HasOne("IntegradorSofttekImanol.Models.Entities.Role", null)
                        .WithMany("Usuarios")
                        .HasForeignKey("RoleCodRole");
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.Work", b =>
                {
                    b.HasOne("IntegradorSofttekImanol.Models.Entities.Project", "Project")
                        .WithMany("Works")
                        .HasForeignKey("CodProject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntegradorSofttekImanol.Models.Entities.Service", "Service")
                        .WithMany("Works")
                        .HasForeignKey("CodService")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.Project", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.Role", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.Service", b =>
                {
                    b.Navigation("Works");
                });
#pragma warning restore 612, 618
        }
    }
}

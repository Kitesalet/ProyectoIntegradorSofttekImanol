// <auto-generated />
using System;
using IntegradorSofttekImanol.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntegradorSofttekImanol.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230924145910_last_mig")]
    partial class last_mig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.Project", b =>
                {
                    b.Property<int>("CodProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codProyecto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodProject"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("direccion");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaAlta");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaBaja");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaUpdate");

                    b.HasKey("CodProject");

                    b.ToTable("proyectos");

                    b.HasData(
                        new
                        {
                            CodProject = 1,
                            Address = "123 Oil Avenue",
                            CreatedDate = new DateTime(2023, 9, 24, 11, 59, 10, 169, DateTimeKind.Local).AddTicks(6225),
                            Name = "Oil Rig",
                            State = 1
                        },
                        new
                        {
                            CodProject = 2,
                            Address = "456 Drilling Avenue",
                            CreatedDate = new DateTime(2023, 9, 24, 11, 59, 10, 169, DateTimeKind.Local).AddTicks(6237),
                            Name = "Drilling",
                            State = 2
                        },
                        new
                        {
                            CodProject = 3,
                            Address = "789 Refinery Avenuen",
                            CreatedDate = new DateTime(2023, 9, 24, 11, 59, 10, 169, DateTimeKind.Local).AddTicks(6238),
                            Name = "Refinery",
                            State = 3
                        });
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.Service", b =>
                {
                    b.Property<int>("CodService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodService"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaAlta");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaBaja");

                    b.Property<string>("Descr")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descr");

                    b.Property<decimal>("HourValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valorHora");

                    b.Property<bool>("State")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaUpdate");

                    b.HasKey("CodService");

                    b.ToTable("servicios");

                    b.HasData(
                        new
                        {
                            CodService = 1,
                            CreatedDate = new DateTime(2023, 9, 24, 11, 59, 10, 169, DateTimeKind.Local).AddTicks(6412),
                            Descr = "Maintenance",
                            HourValue = 100m,
                            State = true
                        },
                        new
                        {
                            CodService = 2,
                            CreatedDate = new DateTime(2023, 9, 24, 11, 59, 10, 169, DateTimeKind.Local).AddTicks(6417),
                            Descr = "Inspection",
                            HourValue = 120m,
                            State = false
                        },
                        new
                        {
                            CodService = 3,
                            CreatedDate = new DateTime(2023, 9, 24, 11, 59, 10, 169, DateTimeKind.Local).AddTicks(6418),
                            Descr = "Drilling",
                            HourValue = 150m,
                            State = true
                        },
                        new
                        {
                            CodService = 4,
                            CreatedDate = new DateTime(2023, 9, 24, 11, 59, 10, 169, DateTimeKind.Local).AddTicks(6430),
                            Descr = "Assessment",
                            HourValue = 200m,
                            State = false
                        },
                        new
                        {
                            CodService = 5,
                            CreatedDate = new DateTime(2023, 9, 24, 11, 59, 10, 169, DateTimeKind.Local).AddTicks(6431),
                            Descr = "Construction",
                            HourValue = 250m,
                            State = true
                        });
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.User", b =>
                {
                    b.Property<int>("CodUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodUser"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaAlta");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaBaja");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("contrasena");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaUpdate");

                    b.HasKey("CodUser");

                    b.ToTable("usuarios");

                    b.HasData(
                        new
                        {
                            CodUser = 1,
                            CreatedDate = new DateTime(2023, 9, 24, 11, 59, 10, 169, DateTimeKind.Local).AddTicks(6929),
                            Dni = 39321874,
                            Name = "random",
                            Password = "3df84d8d2fd61fcbe9a904130b40ff617b662f7bd82c1c917a67f95314138302",
                            Type = 2
                        },
                        new
                        {
                            CodUser = 2,
                            CreatedDate = new DateTime(2023, 9, 24, 11, 59, 10, 169, DateTimeKind.Local).AddTicks(7004),
                            Dni = 39847635,
                            Name = "random",
                            Password = "3df84d8d2fd61fcbe9a904130b40ff617b662f7bd82c1c917a67f95314138302",
                            Type = 1
                        });
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.Work", b =>
                {
                    b.Property<int>("CodWork")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codTrabajo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodWork"), 1L, 1);

                    b.Property<int>("CodProject")
                        .HasColumnType("int")
                        .HasColumnName("codProyecto");

                    b.Property<int>("CodService")
                        .HasColumnType("int")
                        .HasColumnName("codServicio");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("costo");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaAlta");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaBaja");

                    b.Property<int>("HourQty")
                        .HasColumnType("int")
                        .HasColumnName("cantHoras");

                    b.Property<decimal>("HourValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valorHora");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaUpdate");

                    b.HasKey("CodWork");

                    b.HasIndex("CodProject");

                    b.HasIndex("CodService");

                    b.ToTable("trabajos");

                    b.HasData(
                        new
                        {
                            CodWork = 1,
                            CodProject = 1,
                            CodService = 1,
                            Cost = 1000m,
                            CreatedDate = new DateTime(2023, 9, 24, 11, 59, 10, 169, DateTimeKind.Local).AddTicks(6549),
                            Date = new DateTime(2023, 9, 24, 11, 59, 10, 169, DateTimeKind.Local).AddTicks(6547),
                            HourQty = 10,
                            HourValue = 100m
                        },
                        new
                        {
                            CodWork = 2,
                            CodProject = 2,
                            CodService = 2,
                            Cost = 2400m,
                            CreatedDate = new DateTime(2023, 9, 24, 11, 59, 10, 169, DateTimeKind.Local).AddTicks(6550),
                            Date = new DateTime(2023, 9, 24, 11, 59, 10, 169, DateTimeKind.Local).AddTicks(6549),
                            HourQty = 20,
                            HourValue = 120m
                        });
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.Work", b =>
                {
                    b.HasOne("IntegradorSofttekImanol.Models.Entities.Project", "Project")
                        .WithMany("Works")
                        .HasForeignKey("CodProject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntegradorSofttekImanol.Models.Entities.Service", "Service")
                        .WithMany("Works")
                        .HasForeignKey("CodService")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.Project", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("IntegradorSofttekImanol.Models.Entities.Service", b =>
                {
                    b.Navigation("Works");
                });
#pragma warning restore 612, 618
        }
    }
}
